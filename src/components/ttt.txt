import "./App.css";
import Sidebar from "./components/Sidebar";
import { Route, BrowserRouter as Router } from "react-router-dom";
import Home from "./Pages/Home";
import { setClientToken } from "./components/spotify";
import Login from "./components/auth/Login";
import PlayerState from "./context/PlayerState";
import BellaState from "./context/BellaState";
import Controls from "./components/Controls";
import Actions from "./components/playlist/Actions";
import Playlist from "./components/playlist/NewRelease";
import Currently from "./Pages/Currently";
import { useState, useEffect } from "react";
import Search from "./Pages/Search";
import Collection from "./Pages/Collection";
import Collections from "./Pages/Collections";
import NewRelease from "./components/playlist/NewRelease";

import AnimatedRoutes from "./Pages/AnimatedRoutes";

function App() {
  const [token, setToken] = useState("");

  useEffect(() => {
    const token = window.localStorage.getItem("token");
    const hash = window.location.hash;
    window.location.hash = "";
    if (!token && hash) {
      const _token = hash.split("&")[0].split("=")[1];
      window.localStorage.setItem("token", _token);
      setToken(_token);
      setClientToken(_token);
    } else {
      setToken(token);
      setClientToken(token);
    }
  }, []);
       return ! token ? (
    <Login />
  ) : (
    <>
      <PlayerState>
        <Router>
          <Sidebar />

          <AnimatedRoutes />
        
        </Router>

        <Actions />
        <Controls />
      </PlayerState>
    </>
  );
}

export default App;


<div className='flex  flex-col sm:flex-row'>
          <div className='w-full rounded-[20px] px-[33px] sm:pl-[45px]  bg-[#609EAF] sm:rounded-[40px] sm:w-[686px] relative flex  text-white'>
            <img
              className='sm:hidden absolute top-0 right-0'
              src={CoverBgg}
              alt=''
            />
            <div>
              <h6 className='pt-[32px] sm:pt-[38px] text-[0.8rem] font-thin'>
                Currated playlist
              </h6>
              <h1 className=' pt-[236px] sm:pt-[85px] text-[2rem] font-bold'>
                R & B Hits
              </h1>
              <p className='w-[276px] text-sm leading-[16.8px] pt-[6px]  pb-[46px] sm:pb-[4.75rem]'>
                All mine, Lie again, Petty call me everyday, Out of time, No
                love, Bad habit, and so much more
              </p>

              <div className='flex items-center pb-[42px] sm:pb-[35px] '>
                <img className=' ' src={People} alt='' />
                <img className='ml-3' src={Love} alt='' />
                <h5 className='ml-[0.58rem]'>33K Likes</h5>
              </div>
            </div>

            <motion.img
              initial={{ y: 500 }}
              animate={{
                y: 0,
                transition: { duration: 0.9, type: "spring" },
              }}
              exit={{}}
              className='hidden sm:block sm:z-10 '
              src={Cover}
              alt=''
            />

            <img
              className='hidden sm:block sm:absolute sm:bottom-0 sm:right-0 overflow-hidden '
              src={CoverBg}
              alt=''
            />
          </div>
          <div>
            <h2 className='sm:pl-6 pt-[47px] sm:pt-[1px]  font-bold'>
              Top Charts
            </h2>
            <div className=' sm:block '>
              <Link to='/current'>
                <div className='flex sm:justify-between  sm:items-center items-start sm:w-[417px] bg-[#1A1E1F] pt-[17px] pl-[17px] pb-[16px] rounded-[20px] sm:ml-[22px] mb-3 '>
                  <div className='sm:flex sm:items-center sm:flex-row flex flex-col'>
                    <div className='w-[63px] mr-[14px]'>
                      <div className='w-[100%]  h-[63px]'>
                        <img
                          className=' w-[100%] h-[100%] rounded-[10px] object-cover'
                          src={Seyi}
                          alt=''
                        />
                      </div>
                    </div>
                    <div>
                      <h4 className='text-[17px] pb-[4px] '>NSNV</h4>
                      <h6 className='text-[#EFEEE040] pb-[8px] text-[12px] '>
                        Seyi Vibez
                      </h6>
                      <p className='text-[12px] '>2:34:45</p>
                    </div>
                  </div>
                  <div className='bg-transparent border mr-[29px]   border-[#EFEEE040] p-[10px] rounded-full'>
                    <img className='' src={Like} alt='' />
                  </div>
                </div>
              </Link>

              <Link to='/currently'>
                <div className='flex sm:justify-between sm:items-center items-start sm:w-[417px] bg-[#1A1E1F] pt-[17px] pl-[17px] pb-[16px] rounded-[20px] sm:ml-[22px] mb-3 '>
                  <div className='sm:flex sm:items-center sm:flex-row flex flex-col'>
                    <div className='w-[63px] mr-[14px]'>
                      <div className='w-[100%]  h-[63px]'>
                        <img
                          className=' w-[100%] h-[100%] rounded-[10px] object-cover'
                          src={Currentlyplaying}
                          alt=''
                        />
                      </div>
                    </div>
                    <div>
                      <h4 className='text-[17px] pb-[4px] '>Hypertension</h4>
                      <h6 className='text-[#EFEEE040] pb-[8px] text-[12px] '>
                        Bella Shmurda
                      </h6>
                      <p className='text-[12px] '>2:34:45</p>
                    </div>
                  </div>
                  <div className='bg-transparent border mr-[29px]   border-[#EFEEE040] p-[10px] rounded-full'>
                    <img className='' src={Like} alt='' />
                  </div>
                </div>
              </Link>
              <div className='flex sm:justify-between sm:items-center items-start sm:w-[417px] bg-[#1A1E1F] pt-[17px] pl-[17px] pb-[16px] rounded-[20px] sm:ml-[22px] mb-3 '>
                <div className='sm:flex sm:items-center sm:flex-row flex flex-col'>
                  <img className='mr-[14px]' src={Currenttt} alt='' />
                  <div>
                    <h4 className='text-[17px] pb-[4px] '>Golden age of 80s</h4>
                    <h6 className='text-[#EFEEE040] pb-[8px] text-[12px] '>
                      Sean swadder
                    </h6>
                    <p className='text-[12px] '>2:34:45</p>
                  </div>
                </div>
                <div className='bg-transparent border mr-[29px]   border-[#EFEEE040] p-[10px] rounded-full'>
                  <img className='' src={Like} alt='' />
                </div>
              </div>
            </div>
          </div>
        </div>



        <h2 className='mb-[13px] font-bold text-[24px]'>New Release.</h2>
        <motion.div className=''>
          <motion.div
            ref={container}
            className='w-[1125px] flex cursor-grab overflow-hidden   '
          >
            <motion.div
              className='inline-flex'
              drag='x'
              dragConstraints={{ right: 0, left: -width }}
              whileTap={{ cursor: "grabbing" }}
            >
              <ul className='flex '>
                {songslist.map((song, i) => (
                  <li 
                    className={
                      "songContainer " + (currentSong === i ? "selected" : "")
                    }
                    key={i}
                    onClick={() => {
                      SetCurrent(i)
                    }}
                  >
                    <div className='tmbn_song'>
                      <i className='fas fa-play'></i>
                    </div>
                    <div className='songmeta_playlist'>
                      
                      <div className='w-[153px] mr-[30px]'>
                        <div className='w-[100%] h-[153px]'>
                        
                        <img  className='w-[100%] h-[100%] object-cover pointer-events-none rounded-[25px] ' src={song.img} alt="" />
                        
                        </div>
                      </div>
                      <h6 className='text-[12px] text-[#EFEEE0]'>{song.title}</h6>
                    </div>
                   
                  </li>
                ))}
              </ul>
            </motion.div>
          </motion.div>
        </motion.div>
        


        <h2 className='mb-[13px] font-bold text-[24px]'>New Release.</h2>
        <motion.div className=''>
          <motion.div
            ref={container}
            className='w-[1125px] flex cursor-grab overflow-hidden   '
          >
            <motion.div
              className='inline-flex'
              drag='x'
              dragConstraints={{ right: 0, left: -width }}
              whileTap={{ cursor: "grabbing" }}
            >
              <ul className='flex '>
                {songslist.map((song, i) => (
                  <li 
                    className={
                      "songContainer " + (currentSong === i ? "selected" : "")
                    }
                    key={i}
                    onClick={() => {
                      SetCurrent(i)
                    }}
                  >
                    <div className='tmbn_song'>
                      <i className='fas fa-play'></i>
                    </div>
                    <div className='songmeta_playlist'>
                      
                      <div className='w-[153px] mr-[30px]'>
                        <div className='w-[100%] h-[153px]'>
                        
                        <img  className='w-[100%] h-[100%] object-cover pointer-events-none rounded-[25px] ' src={song.img} alt="" />
                        
                        </div>
                      </div>
                      <h6 className='text-[12px] text-[#EFEEE0]'>{song.title}</h6>
                    </div>
                   
                  </li>
                ))}
              </ul>
            </motion.div>
          </motion.div>
        </motion.div>
        
        useEffect(() => {
    setWidth(container.current.scrollWidth - container.current.offsetWidth);
    APIKit.get("browse/new-releases").then((response) => {
      console.log(response.data);
      setNewRelease(response.data.albums.items);
    });
    console.log(newRelease);
  }, []);
  .then((response) => {
        console.log(response.data);
        setNewReleases(response.data.albums.items[0].artists[0].id);
        console.log(newReleases);}

        import React, { useContext } from "react";
import playerContext from "../../context/playerContext";
import { useEffect, useRef, useState } from "react";
import { motion } from "framer-motion";
import APIKit from "../spotify";

function NewRelease() {
  const { SetCurrent, currentSong, songslist } = useContext(playerContext);
  const [newReleases, setNewReleases] = useState([]);
  const [width, setWidth] = useState(0);
  const container = useRef();

  useEffect(() => {
    setWidth(container.current.scrollWidth - container.current.offsetWidth);
    const re = async () => {
      await APIKit.get("browse/new-releases" + "?&limit=10&offset=0")
      .then((response) => {
        console.log(response);
        setNewReleases(response.data.albums.items);
        console.log(newReleases)
        
      });
    };
    re();
  }, []);

  return (
    <>
      <div className="mt-[43px] px-[23px] sm:ml-[6rem] text-white">
  {newReleases.map((newRelease,i)=>{
    return(
      <div>
        <h5>{newRelease.name}</h5>
        <img src={newRelease.images[0].url} />
      </div>
    )
  })}

        <h2 className="mb-[13px] font-bold text-[24px]">New Release.</h2>
        <motion.div className="">
          <motion.div
            ref={container}
            className="w-[1125px] flex cursor-grab overflow-hidden   "
          >
            <motion.div
              className="inline-flex"
              drag="x"
              dragConstraints={{ right: 0, left: -width }}
              whileTap={{ cursor: "grabbing" }}
            >
              <ul className="flex ">
                {songslist.map((song, i) => (
                  <li
                    className={
                      "songContainer " + (currentSong === i ? "selected" : "")
                    }
                    key={i}
                    onClick={() => {
                      SetCurrent(i);
                    }}
                  >
                    <div className="tmbn_song">
                      <i className="fas fa-play"></i>
                    </div>
                    <div className="songmeta_playlist">
                      <div className="w-[153px] mr-[30px]">
                        <div className="w-[100%] h-[153px]">
                          <img
                            className="w-[100%] h-[100%] object-cover pointer-events-none rounded-[25px] "
                            src={newRelease.images[0].url}
                            alt=""
                          />
                        </div>
                      </div>
                      <h6 className="text-[12px] text-[#EFEEE0]">
                      {newRelease.name}
                      </h6>
                    </div>
                  </li>
                ))}
              </ul>
            </motion.div>
          </motion.div>
        </motion.div>
      </div>
    </>
  );
}

export default NewRelease;


import axios from "axios";

const authEndpoint = "https://accounts.spotify.com/authorize?";
const clientId = "6d4e855be53e4035af5126e2451c8682";
const redirectUri = "http://localhost:3000";
const scopes = ["user-library-read", "playlist-read-private"];

export const loginEndpoint = `${authEndpoint}client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(
  "%20"
)}&response_type=token&show_dialog=true`;

const apiClient = axios.create({
  baseURL: "https://api.spotify.com/v1/", 
});

export const setClientToken = (token) => {
  apiClient.interceptors.request.use(async function (config) {
    config.headers.Authorization = "Bearer " + token;
    return config;
  });
};

export default apiClien